The requirements for the test project are:
You want to design a continuous delivery architecture for a scalable and secure 3 tier Node application. Application to use can be found on https://devops-screening.s3.amazonaws.com/screening.zip

Both web and API tiers should be exposed to the internet and DB tier should not be accessible from the internet.
You should fork the repository and use it as the base for your system.
* You need to create resources for all the tiers. 
* The web static resources must be served through a CDN.
* The architecture should be completely provisioned via some infrastructure as a code tool. 
* Presented solution must handle server (instance) failures. 
* Components must be updated without downtime in service. 
* The deployment of new code should be completely automated (bonus points if you create tests and include them into the pipeline). 
* The database and any mutable storage need to be backed up at least daily. 
* All relevant logs for all tiers need to be easily accessible (having them on the hosts is not an option). 
* You should fork the repository and use it as the base for your system. 
* You should be able to deploy it on one larger Cloud provider: AWS / Google Cloud / Azure / DigitalOcean / RackSpace. 
* The system should present relevant historical metrics to spot and debug bottlenecks.
As a solution, please commit to the git repo the following:
* An architectural diagram / PPT to explains.
* All the relevant configuration scripts (Terraform/Chef/Puppet/cfengine/ansible/cloud formation) 
* All the relevant runtime handling scripts (start/stop/scale nodes). 
* All the relevant backup scripts.
Please use this private repository to version-control your code:
https://devops-screening.s3.amazonaws.com/screening.zip

